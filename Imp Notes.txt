##1. What is Node js ?
--> Its Open Source Server Enviornment and Usees Java Script on Server.


**Node js uses Asynchronus programming : Because it eliminates the waiting time , and continuous with next request.
**It runs single threaded , non blocking and is memory efficient.

##How node js works:
1. send the task to computer file system.
2. Ready to Handle next request
3. When file system has opened file and read it , server will send content to client.

##What it can Do --> 
1.read, write, delete , and close files in server. also can generate dynamic pages.
2.add, delete , modify data into database.

##what is node.js file??
--> it contains Task which are generated on the specific event	.
--> node.js must be initiated on the server before having any effect.


##What are modules in node js ??
--> We can consider modules same as the javascript libraries , or a set of functions you want to include in your application.

##Some built in modules in nodejs are :
http : to serve nodejs as http server
path : to habdle the file path
More ex. : https://www.w3schools.com/nodejs/ref_modules.asp


##How to include the module :
we can use require function to include the module 
--> For ex : var httpserver = require('http');

##How to Create Our Own Modules :

For eg : Creating the Module which return current date and time of system
--  exports.myDateTime = function(){
    return Date();      //Date is the Inbuilt Function in nodejs
}

//exports is used becuase we have to access this module outside into the other fiiles or module file.



##Built In HTTP module :
node.js has bulit in module called HTTP , which allows node.js to tranfer data over HTTP server protocol. To inlcude MOdule use require().
For Eg : var a = require('http');


##To use Node.js As a web Server :
The HTTP module can create an HTTP server that listens to server ports and give response back to client.
For this we can usee the Create Server Method ; createServer();


## TO Add the HTTP Header :
If the Response from the sever suposed to displayed in HTML , We should Include HTTP header with correct Content Type.
For Eg : res.writeHead(200,{'content-Type' : 'Text/html'});

req : parameter is parameter that the client has requested to the server . It include the property called URL which gives the URL name after Domain Name.

##Split the Quesry From URL Side:
THere are inbulit module to split the query string from URL that is URL module so we would be requiring that module.


##Node Js As File Server:
The nodejs file system allows us to work with the file system on our computer.
To import module we have to use the require();
for eg : var fs = require('fs');

##Commom Use Of file Syatems : 
1. read , write , create , update , delete , rename 

1. To read The files in Node js : fs.readFile() to read file from computer 
We would do example which would re reading HTML File from Computer System as example.

2. To create the File using node js :
    fs.appendFile(); - to wrtite after the content already exist , if file not exist it will create it and the wtrite to file
    fs.open(); - to open file in write or empty mode depend on the flag in the parameter.
    fs.writeFile(); - to write the content into the file and replaced the previous content if already exists.

3. To delte the File From Comnputer Using nodejs use :
    fs.unlink();

4. to rename the file : 
    fs.rename();  //@params : initial File name , file name to be rename , function of error handling


##Bulit In URL Module (Advanced Topics):
--- url.parse() : - Parse an address with the url.parse() method.  and will return URL object with each part of the Address Properties
Demo is availabe ib  Demo_URLModule.js  
Some Function in URL are : Pathname , host and search


##Node.js NPM :
Npm is package manager for the modules for node.js packages

##What is Package??
-- A package in node.js is conatins all the files you need for the mpodule.
Modules are javascript libraries we can include in our project.

## TO Download a Package From NPM:
npm install 'upper-case'  -- name of the package is in the single qoutes , we have to wtrite command without qotes.

## How to use the NPM pacakges :
we can use same as we were using modules , by using the require() method.
For Eg : Dem_npm_upper_case.js is the Demo File


##Node.js Events:
--Every action on a computer is like the event , like connection is made or file is opened
--objects in nodejs can fire the events , like readstream objects fires event whern opening and closing file;
eg is shown in Demo_events_read_openFile.js

##Event Module in Nodejs inbuilt Functions :
--node js has inbuluit event where we can create , fire and listen for -your events
-- all event Properties and method are an instance of an EventEmitter object. To be able to access the properties and methods 
we have to create EventEmitter object.
We can see the example in file Demo_Event_Emmoiter_Object.js file.

##Node Js To upload the File in the server:

The Formidable Module is required to doing the Uploading of the Files 
the example of the upload is in the file Demo_formidable.js
--In this file we would be uploading the file from the computer system in node.js


##Node Js sending the mail using nodemailer module:
--this module makes easy toi send the mail from the computer.
--How to send the email is shown in thew example of file : Demo_nodeMailer.js


-------------------------------------------------------------NodeJs With MYSQL------------------------------------------------------------
##Node Js Connecting With Mysql::
-->To connect with the mysql we have to require to download mysql module from npm and require in our node.js file

After require the module we haver to connect with the database.
to connect with it we use createConnection() function shown in Demo_Mysql_connection.

##After this as we have connected to the Database we can start now querying from nodejs to mysql.
con.query(sql,function(err,result)); --> Function tajes two aeguemnts as parameter
@param1 : sql variable in which the query is written
@param2 : function with error and result handling , if perfectly executed query result will store in 'result' else err will throw error.


##How to create the Database using Node.js:
we have to fire the sql query for the same to create database in con.query function;

##How to Create the Table using the NODEjs :
we have to fire the query for same in the con.query function as parameter.
demo is shown in Demo_createTable.js

##How to Create Primary while Creating the Table :
Eg Demo shhown in Demo_primary_Key_table.js

##How to insert the values into the table.
Foir that we have to fire the query for insert shown in example Demo_insertquery.js

---What if we want to insert multiple records at same time??
-- for that we can use array and pass to the sql statement how?? see example Demo_insertquery.js
--to insert more than one record make an array conatining of the records and insert a question mark at last of the sql query
just like sql_query="INSERT INTO (name ,address) customers VALUES ?";
on executiong the query at run time question mark would be replaced by the array values;
how to do : con.query(sql,[values],function(err,result){
    console.log(result.affectedRows);       //it would return the how many rows inserted
});


##THE result object in the con.query parameter :
it consist of the 
{
    fieldCount: 0,
    affectedRows: 14,
    insertId: 0,
    serverStatus: 2,
    warningCount: 0,
    message: '\'Records:14  Duplicated: 0  Warnings: 0',
    protocol41: true,
    changedRows: 0
}

to get the insertid if one row is inserted then we would get that id. if multiple rows are inserted then we cant get that but ID would be 
incremented as the records are inserted.


##Select From Conditions in the MysqlNode js :
for the select query we have to write the query which we afre writing in the sql , but the result would be stored as an object in 
the parasmeter calleld result.

fields Object the third parameter in the callback function:
--the filed function would have as an object and conatins the details of all the columns which are passed in select statement.

##Where Condition in in SQL using Nodejs:
we have to write only the concept of the mysql query else the nodejs part remians the same for all;
the parameter result will have all the data inside it of the select query.

##WildCard Characters we can also used in the node js while using mysql database such as :
like keyword in that  '%' or '_' etc can be used , 
the above two are used in the exaple file as demo_select_where_query.js


##Escaping the Query values :
When query values are provided by the users we have to escape that value.
mysql has the method to escape the query. --> mysql.escape();
example demo is Demo_escape_mysql_query.js

-- We can also use the '?' to escape the values.
for ex : var sql = "select * from customers where address = ? ";

while executing the query using the con.query function we have to pass the variable in which we had store the value of address
for eg : con.query(sql , [adr] , function(err,result){

});

-- if want to use multiple place holders we can use it like below:
--var sql = "select * from customers where name = ? and address = ?" 
.for eg : con.query(sql,[name,adr],function(err,result){

});


##Order By cluase using the Nodejs :
the order by clause is same as we had learnt in mysql the implementation is same as the previous where and select statement
for eg shown in Ddemo_Order_By.js


##Delete the particular record from the table\:
the query is same as we were writing in the sql and implementation is also same as we hade seen for select conditon.
for Eg see the Demo_Delete_query.js
result object has the parameter which tells us how many rowws have been affected by the query its either insert , delete , or update


##Drop the table Query:
--Droping of table query is same whichi we were writing in the sql.
for exampole see the Demo_Drop_Table.js


##Update the Record in the mysql using Nodejs :
--> Update is the same query which we write in the SQL ,
for exmaple see the implementation in Demo_Update_Query.js


##Limit the record :
--> in sql we can limit the  number of records by using the LIMIT Funcrtion in SQL query\
For example see the Example Demo_Limit_Query.js

--Now what if we dont want first 5 we want the after 3 records we want 5 records
so that SQL HAS offset function which can be implemeted after the limit or
in short way we can directly put , and put the start index.

the offset indicate after this position we have to take 5 record means start from 3 to take not 2.


##Join in Mysql using NodeJs:
this the syntx to join remains the same as we have in sql.
For implemetation see the Demo_Join_query.js

We can include all the types of the join in Nodejs , left , right join etc.
--Just we have knowledge of SQL statement and queries.

-------------------------------------------------------------NodeJs With MongoDB------------------------------------------------------------

